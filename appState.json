{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "90a430ff-987b-4355-a2d6-5aed98177664": {
        "id": "90a430ff-987b-4355-a2d6-5aed98177664",
        "parent": null,
        "name": "indunilProd",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "de39dee0-6b83-4df1-b138-933aa69db8de"
        ],
        "isRemovable": false,
        "filePath": "indunilProd"
      },
      "de39dee0-6b83-4df1-b138-933aa69db8de": {
        "id": "de39dee0-6b83-4df1-b138-933aa69db8de",
        "parent": "90a430ff-987b-4355-a2d6-5aed98177664",
        "name": "lambda.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "indunilProd/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\n\nexports.handler = function (event, context, callback) {\n\n    s3.listObjects({\n        'Bucket': 'btbucket.images',\n        'MaxKeys': 10,\n        'Prefix': '6'\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n            /*\n            data = {\n             Contents: [\n                {\n                   ETag: \"\\\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\\\"\",\n                   Key: \"example1.jpg\",\n                   LastModified: <Date Representation>,\n                   Owner: {\n                      DisplayName: \"myname\",\n                      ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                   },\n                   Size: 11,\n                   StorageClass: \"STANDARD\"\n                },\n                {...}\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n\n\n    s3.listObjects({\n        'Bucket': 'as2-test-lahiru',\n        'MaxKeys': 10,\n        'Prefix': '10'\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n            /*\n            data = {\n             Contents: [\n                {\n                   ETag: \"\\\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\\\"\",\n                   Key: \"example1.jpg\",\n                   LastModified: <Date Representation>,\n                   Owner: {\n                      DisplayName: \"myname\",\n                      ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                   },\n                   Size: 11,\n                   StorageClass: \"STANDARD\"\n                },\n                {...}\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n\n    s3.listObjects({\n        'Bucket': 'com.sigma.test.318300609668.indunil.us-east-1',\n        'MaxKeys': 10,\n        'Prefix': '9'\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n            /*\n            data = {\n             Contents: [\n                {\n                   ETag: \"\\\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\\\"\",\n                   Key: \"example1.jpg\",\n                   LastModified: <Date Representation>,\n                   Owner: {\n                      DisplayName: \"myname\",\n                      ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                   },\n                   Size: 11,\n                   StorageClass: \"STANDARD\"\n                },\n                {...}\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n\n    s3.copyObject({\n        'Bucket': \"cloud9-ktest\",\n        'CopySource': `/s3bucket/table`,\n        'Key': \"table\"\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n            /*\n            data = {\n                CopyObjectResult: {\n                    ETag: \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n                    LastModified: <Date Representation>\n                }\n            }\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n s3.\n\n\n\n\n    callback(null, { \"message\": \"Successfully **+++123++++** executed\" });\n}",
        "triggers": [
          {
            "resourceName": "apigusEast1Londonindunilqatstget",
            "config": {}
          }
        ],
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "testCases": {
          "64c2a7ee-e0a0-47bc-ad2a-f7486f775011": {
            "id": "64c2a7ee-e0a0-47bc-ad2a-f7486f775011",
            "name": "Unnamed event",
            "functionId": "de39dee0-6b83-4df1-b138-933aa69db8de",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "90a430ff-987b-4355-a2d6-5aed98177664",
    "openFiles": [
      "de39dee0-6b83-4df1-b138-933aa69db8de"
    ],
    "currentFileId": "de39dee0-6b83-4df1-b138-933aa69db8de",
    "resources": {
      "apigusEast1Londonindunilqatstany": {
        "name": "apigusEast1Londonindunilqatstany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "London",
          "endpointType": "REGIONAL",
          "resourceMode": 0,
          "resourceName": "indunil/qa/tst",
          "resourcePath": "/indunil/qa/tst",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "apigusEast1Londonindunilqatstget": {
        "name": "apigusEast1Londonindunilqatstget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "London",
          "endpointType": "REGIONAL",
          "resourceMode": 0,
          "resourceName": "indunil/qa/tst",
          "resourcePath": "/indunil/qa/tst",
          "restMethod": "GET",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "prod"
        },
        "globallyEditable": false
      },
      "s3as2TestLahiru": {
        "name": "s3as2TestLahiru",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "as2-test-lahiru"
          }
        },
        "globallyEditable": false
      },
      "s3Unnamed": {
        "name": "s3Unnamed",
        "type": "S3",
        "config": {
          "mode": 0,
          "bucket": {
            "region": "us-east-1",
            "name": ""
          }
        },
        "globallyEditable": false
      },
      "s3btbucketimages": {
        "name": "s3btbucketimages",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "btbucket.images"
          }
        },
        "globallyEditable": false
      },
      "s3comsigmatest318300609668indunilusEast1": {
        "name": "s3comsigmatest318300609668indunilusEast1",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "com.sigma.test.318300609668.indunil.us-east-1"
          }
        },
        "globallyEditable": false
      },
      "s3s3bucket": {
        "name": "s3s3bucket",
        "type": "S3",
        "config": {
          "mode": 0,
          "bucket": {
            "region": "us-east-1",
            "name": "s3bucket"
          },
          "destinationBucket": {
            "name": "cloud9-ktest"
          }
        },
        "globallyEditable": false
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "indunilProd",
    "projectDescription": "prod",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1561715425415
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "indunilProd",
      "url": "https://github.com/Indunil1992/indunilProd"
    }
  }
}